"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_temp-storage_ts";
exports.ids = ["_rsc_src_lib_temp-storage_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/temp-storage.ts":
/*!*********************************!*\
  !*** ./src/lib/temp-storage.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBusinessById: () => (/* binding */ getBusinessById),\n/* harmony export */   getBusinessStats: () => (/* binding */ getBusinessStats),\n/* harmony export */   storeBusiness: () => (/* binding */ storeBusiness)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Temporary file-based storage for immediate demo functionality\n// This will be replaced with cloud database once set up\nconst DATA_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"temp-data\");\nconst BUSINESSES_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(DATA_DIR, \"businesses.json\");\n// Ensure data directory exists\nasync function ensureDataDir() {\n    try {\n        await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(DATA_DIR, {\n            recursive: true\n        });\n    } catch (error) {\n    // Directory might already exist\n    }\n}\nasync function storeBusiness(businessData) {\n    await ensureDataDir();\n    const businessId = `biz_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const business = {\n        id: businessId,\n        name: businessData.name,\n        type: businessData.type,\n        industry: businessData.industry,\n        website: businessData.website || \"\",\n        email: businessData.email,\n        phone: businessData.phone,\n        address: businessData.address,\n        description: businessData.description,\n        features: businessData.features || [],\n        branding: businessData.branding || {},\n        confidence: businessData.confidence || 50,\n        business_details: businessData.businessDetails || {},\n        reputation_score: businessData.webIntelligence?.reputationScore || 0,\n        web_intelligence: businessData.webIntelligence || {},\n        status: \"active\",\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    };\n    try {\n        // Read existing businesses\n        let businesses = [];\n        try {\n            const data = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(BUSINESSES_FILE, \"utf-8\");\n            businesses = JSON.parse(data);\n        } catch (error) {\n        // File doesn't exist or is empty\n        }\n        // Add new business\n        businesses.push(business);\n        // Write back to file\n        await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(BUSINESSES_FILE, JSON.stringify(businesses, null, 2));\n        console.log(`ðŸ’¾ Business stored in temp storage: ${business.name} with ID: ${businessId}`);\n        return businessId;\n    } catch (error) {\n        console.error(\"Failed to store business:\", error);\n        throw error;\n    }\n}\nasync function getBusinessById(id) {\n    await ensureDataDir();\n    try {\n        const data = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(BUSINESSES_FILE, \"utf-8\");\n        const businesses = JSON.parse(data);\n        return businesses.find((b)=>b.id === id) || null;\n    } catch (error) {\n        console.error(\"Failed to read businesses:\", error);\n        return null;\n    }\n}\nasync function getBusinessStats(businessId) {\n    // Return realistic stats based on business type\n    const business = await getBusinessById(businessId);\n    if (!business) {\n        return {\n            totalEquipment: 0,\n            totalCustomers: 0,\n            activeRentals: 0,\n            totalRevenue: 0,\n            availableEquipment: 0,\n            maintenanceEquipment: 0\n        };\n    }\n    // Generate realistic stats based on business type and reputation\n    const baseMultiplier = Math.max(business.reputation_score / 100, 0.5);\n    const typeStats = {\n        heavy_equipment: {\n            equipment: Math.round(25 * baseMultiplier),\n            customers: Math.round(45 * baseMultiplier),\n            rentals: Math.round(12 * baseMultiplier),\n            revenue: Math.round(67500 * baseMultiplier)\n        },\n        party_rental: {\n            equipment: Math.round(180 * baseMultiplier),\n            customers: Math.round(89 * baseMultiplier),\n            rentals: Math.round(23 * baseMultiplier),\n            revenue: Math.round(45200 * baseMultiplier)\n        },\n        car_rental: {\n            equipment: Math.round(35 * baseMultiplier),\n            customers: Math.round(156 * baseMultiplier),\n            rentals: Math.round(28 * baseMultiplier),\n            revenue: Math.round(89300 * baseMultiplier)\n        },\n        tool_rental: {\n            equipment: Math.round(95 * baseMultiplier),\n            customers: Math.round(67 * baseMultiplier),\n            rentals: Math.round(18 * baseMultiplier),\n            revenue: Math.round(23400 * baseMultiplier)\n        },\n        custom: {\n            equipment: Math.round(42 * baseMultiplier),\n            customers: Math.round(78 * baseMultiplier),\n            rentals: Math.round(15 * baseMultiplier),\n            revenue: Math.round(34500 * baseMultiplier)\n        }\n    };\n    const stats = typeStats[business.type] || typeStats.custom;\n    return {\n        totalEquipment: stats.equipment,\n        totalCustomers: stats.customers,\n        activeRentals: stats.rentals,\n        totalRevenue: stats.revenue,\n        availableEquipment: Math.floor(stats.equipment * 0.7),\n        maintenanceEquipment: Math.floor(stats.equipment * 0.1)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/temp-storage.ts\n");

/***/ })

};
;