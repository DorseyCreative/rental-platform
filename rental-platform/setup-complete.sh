#!/bin/bash

# Complete Platform Setup Script
# Sets up the entire Heavy Equipment Rental Platform

echo "üöÄ Heavy Equipment Rental Platform - Complete Setup"
echo "=================================================="

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Please run this script from the rental-platform directory"
    exit 1
fi

echo ""
echo "üìã Setup Checklist:"
echo "  ‚ñ° Environment Configuration"
echo "  ‚ñ° Database Setup (Supabase)"
echo "  ‚ñ° PWA Assets Generation"
echo "  ‚ñ° Dependencies Installation"
echo "  ‚ñ° Development Server"
echo "  ‚ñ° Mobile Testing Setup"
echo ""

read -p "ü§î Continue with setup? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Setup cancelled."
    exit 1
fi

echo ""
echo "1Ô∏è‚É£ Installing Dependencies..."
echo "================================"
npm install
if [ $? -ne 0 ]; then
    echo "‚ùå npm install failed"
    exit 1
fi
echo "‚úÖ Dependencies installed"

echo ""
echo "2Ô∏è‚É£ Generating PWA Assets..."
echo "============================"
./generate-icons.sh
echo "‚úÖ PWA assets generated"

echo ""
echo "3Ô∏è‚É£ Environment Configuration..."
echo "================================"
if [ ! -f ".env.local" ]; then
    echo "‚ùå .env.local file not found!"
    echo "Please copy .env.local.example to .env.local and configure your API keys"
    exit 1
fi

echo "‚úÖ Environment file found"

echo ""
echo "üì¶ Required API Keys Setup:"
echo "=========================="
echo ""
echo "üîß To complete setup, you need these API keys:"
echo ""
echo "1. Supabase Database:"
echo "   ‚Ä¢ Go to https://supabase.com/dashboard"
echo "   ‚Ä¢ Create a new project"
echo "   ‚Ä¢ Copy Project URL and anon key to .env.local"
echo "   ‚Ä¢ Run the SQL schema from supabase-setup/schema.sql"
echo "   ‚Ä¢ Run the seed data from supabase/seed.sql"
echo ""
echo "2. Google Maps API:"
echo "   ‚Ä¢ Go to https://console.cloud.google.com/"
echo "   ‚Ä¢ Enable Maps JavaScript API, Directions API, Geocoding API"
echo "   ‚Ä¢ Create API key and add to .env.local"
echo ""
echo "3. Twilio SMS (Optional):"
echo "   ‚Ä¢ Go to https://console.twilio.com/"
echo "   ‚Ä¢ Get Account SID, Auth Token, and Phone Number"
echo "   ‚Ä¢ Add to .env.local"
echo ""
echo "4. Stripe Payments (Optional):"
echo "   ‚Ä¢ Go to https://dashboard.stripe.com/"
echo "   ‚Ä¢ Get test API keys"
echo "   ‚Ä¢ Add to .env.local"
echo ""

read -p "ü§î Have you configured your API keys? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "‚ö†Ô∏è  You can continue with limited functionality."
    echo "Some features will be disabled without proper API keys."
    echo ""
fi

echo ""
echo "4Ô∏è‚É£ Building Application..."
echo "=========================="
npm run build
BUILD_EXIT_CODE=$?

if [ $BUILD_EXIT_CODE -ne 0 ]; then
    echo "‚ö†Ô∏è  Build failed, but we can still run in development mode"
    echo "This is normal if API keys are not configured yet."
else
    echo "‚úÖ Build successful"
fi

echo ""
echo "üéâ Setup Complete!"
echo "=================="
echo ""
echo "üåü Your Heavy Equipment Rental Platform is ready!"
echo ""
echo "üì± Available Applications:"
echo "  ‚Ä¢ Business Dashboard: http://localhost:3000/dashboard"
echo "  ‚Ä¢ Customer Portal: http://localhost:3000/portal" 
echo "  ‚Ä¢ Driver Mobile App: http://localhost:3000/driver"
echo "  ‚Ä¢ AI Onboarding: http://localhost:3000/onboarding"
echo ""
echo "üîß Development Commands:"
echo "  ‚Ä¢ Start dev server: npm run dev"
echo "  ‚Ä¢ Mobile testing: ./test-mobile.sh"
echo "  ‚Ä¢ Generate icons: ./generate-icons.sh"
echo "  ‚Ä¢ Build for production: npm run build"
echo ""
echo "üìö Key Features Ready:"
echo "  ‚úÖ Multi-tenant architecture"
echo "  ‚úÖ AI-powered business analysis"
echo "  ‚úÖ Google Maps route optimization"
echo "  ‚úÖ SMS notifications (with Twilio)"
echo "  ‚úÖ Payment processing (with Stripe)"
echo "  ‚úÖ PWA with offline support"
echo "  ‚úÖ Real-time driver app"
echo "  ‚úÖ Customer self-service portal"
echo ""

read -p "üöÄ Start development server now? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üåü Starting development server..."
    echo "Open http://localhost:3000 in your browser"
    echo ""
    npm run dev
else
    echo ""
    echo "üí° To start the server later, run: npm run dev"
    echo "üì± For mobile testing, run: ./test-mobile.sh"
    echo ""
    echo "Happy coding! üéâ"
fi